{"ast":null,"code":"var _jsxFileName = \"/Users/simon/Desktop/Coding/react/movieapp/src/App.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Movies from './Movies';\nimport './App.css';\nimport PropTypes from 'prop-types';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      movies: []\n    };\n\n    this.getMovies = async () => {\n      const _ref = await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_by=rating'),\n            movies = _ref.data.data.movies;\n\n      this.setState({\n        movies,\n        isLoading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          movies = _this$state.movies;\n    return React.createElement(\"section\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, isLoading ? React.createElement(\"div\", {\n      class: \"loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      class: \"loader__text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Loading...\")) : React.createElement(\"div\", {\n      class: \"movies\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, movies.map(movie => React.createElement(Movies, {\n      key: movie.id,\n      id: movie.id,\n      year: movie.year,\n      title: movie.title,\n      summary: movie.summary,\n      poster: movie.medium_cover_image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/simon/Desktop/Coding/react/movieapp/src/App.js"],"names":["React","axios","Movies","PropTypes","App","Component","state","isLoading","movies","getMovies","get","data","setState","componentDidMount","render","map","movie","id","year","title","summary","medium_cover_image"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACvB;AACNC,MAAAA,SAAS,EAAG,IADN;AAENC,MAAAA,MAAM,EAAG;AAFH,KADuB;;AAAA,SAK/BC,SAL+B,GAKnB,YAAW;AAAA,mBACW,MAAMR,KAAK,CAACS,GAAN,CAAU,0DAAV,CADjB;AAAA,YACDF,MADC,QACdG,IADc,CACPA,IADO,CACDH,MADC;;AAErB,WAAKI,QAAL,CAAc;AAAEJ,QAAAA,MAAF;AAAUD,QAAAA,SAAS,EAAC;AAApB,OAAd;AACD,KAR8B;AAAA;;AAS/BM,EAAAA,iBAAiB,GAAE;AACjB,SAAKJ,SAAL;AACD;;AACDK,EAAAA,MAAM,GAAE;AAAA,wBACwB,KAAKR,KAD7B;AAAA,UACEC,SADF,eACEA,SADF;AAAA,UACaC,MADb,eACaA,MADb;AAEN,WACE;AAAS,MAAA,KAAK,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,SAAS,GACR;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,KAAK,EAAC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADQ,GAKR;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIC,MAAM,CAACO,GAAP,CAAWC,KAAK,IACf,oBAAC,MAAD;AACG,MAAA,GAAG,EAAEA,KAAK,CAACC,EADd;AAEG,MAAA,EAAE,EAAED,KAAK,CAACC,EAFb;AAGG,MAAA,IAAI,EAAED,KAAK,CAACE,IAHf;AAIG,MAAA,KAAK,EAAEF,KAAK,CAACG,KAJhB;AAKG,MAAA,OAAO,EAAEH,KAAK,CAACI,OALlB;AAMG,MAAA,MAAM,EAAEJ,KAAK,CAACK,kBANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADJ,CANJ,CADF;AA2BD;;AAzC8B;;AA6CjC,eAAejB,GAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Movies from './Movies'\nimport './App.css'\nimport PropTypes from 'prop-types';\n\nclass App extends React.Component{\n  state = {\n    isLoading : true,\n    movies : []\n  };\n  getMovies = async() => {\n    const {data: {data:{movies}}} = await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_by=rating');\n    this.setState({ movies, isLoading:false });\n  }\n  componentDidMount(){\n    this.getMovies();\n  }\n  render(){\n    const { isLoading, movies } = this.state;\n    return(\n      <section class='container'>\n        {isLoading ? (\n          <div class='loader'>\n            <span class='loader__text'>Loading...</span>\n          </div>\n        ) : (\n          <div class='movies'>\n             {movies.map(movie => (\n               <Movies\n                  key={movie.id}\n                  id={movie.id}\n                  year={movie.year}\n                  title={movie.title}\n                  summary={movie.summary}\n                  poster={movie.medium_cover_image}\n                />\n                )\n             )\n\n             }\n          </div>\n        )\n\n            }\n    </section>\n    )\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}